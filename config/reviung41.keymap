/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define L1 1
#define L2 2
#define L3 3
#define L4 4

&mt {
  tapping-term-ms = <300>;
};

&lt {
  tapping-term-ms = <300>;
};

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    // tdl: tap_dance_l {
    //    compatible = "zmk,behavior-tap-dance";
    //    label = "TAP_DANCE_L";
    //    #binding-cells = <0>;
    //    tapping-term-ms = <300>;
    //    bindings = <&kp LPAR>, <&kp LBKT>;
    //  };
    // tdr: tap_dance_r {
    //    compatible = "zmk,behavior-tap-dance";
    //    label = "TAP_DANCE_R";
    //    #binding-cells = <0>;
    //    tapping-term-ms = <300>;
    //    bindings = <&kp RPAR>, <&kp RBKT>;
    //  };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      // --------------------------------------------------------------------------------------
      // | TAB      | Q | W | E     | R       | T     | Y  | U       | I     | O | P |  -     |
      // | CTRL/ESC | A | S | D     | F       | G     | H  | J       | K     | L | ; | CTRL/' |
      // | SHFT/{   | Z | X | C     | V       | B     | N  | M       | ,     | . | / | SHFT/} |
      //                    | ALT/( | LWR/SPC |  GUI/BSPC  | RSE/RET | ALT/) |
      bindings = <
        &kp Q         &kp W       &kp E      &kp R      &kp T &none &none &kp Y &kp U      &kp I      &kp O       &kp P
        &hm LCTRL A   &hm LSHFT S &hm LALT D &hm LGUI F &kp G &none &none &kp H &hm RGUI J &hm RALT K &hm RSHFT L &hm RCTRL SEMI
        &kp Z         &kp X       &kp C      &kp V      &kp B &none &none &kp N &kp M      &kp COMMA  &kp DOT     &kp FSLH
        &hm LSHFT TAB &lt L1 SPC  &none      &lt L2 RET &hm RSHFT BSPC
        >;
    };

    num_layer {
      // -------------------------------------------------------
      // | `    | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 |  =   |
      // | BSPC | 6 | 7 | 8 | 9 | 0 |   |   |   |   |   | BSPC |
      // |      |   |   |   |   |   |   |   |   |   |   |  \   |
      //                |   |       |   |   |
      bindings = <
        &kp EXCL  &kp AT   &kp HASH &kp DLLR &kp PRCNT &none &none &kp UNDER &kp N7 &kp N8 &kp N9 &kp MINUS
        &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR  &none &none &kp PLUS  &kp N4 &kp N5 &kp N6 &kp EQUAL
        &trans    &trans   &trans   &trans   &trans    &none &none &kp DOT   &kp N1 &kp N2 &kp N3 &trans
        &trans    &trans   &none    &kp N0   &mo L3
        >;
    };

    sym_layer {
      // ---------------------------------------------------------------
      // | ~    | ! | @ | # | $ | % |  ^  |  &  |  *  |  (  | ) |  +   |
      // | BSPC | ^ | & | * | [ | ] | LFT | DWN |  UP | RGT | : | BSPC |
      // |      |   |   |   |   |   |     |     |     |     |   |  |   |
      //                |   |   |         |     |
      bindings = <
        &kp ESC &kp LBKT &kp LBRC &kp RBRC &kp RBKT &none &none &kp TILDE &kp GRAVE &kp SQT &kp DQT   &kp PIPE
        &kp F1  &kp F2   &kp F3   &kp F4   &kp F5   &none &none &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT &kp BSPC
        &kp F6  &kp F7   &kp F8   &kp F9   &kp F10  &none &none &kp F11   &kp F12   &trans  &trans    &kp BSLH
        &mo L3  &trans   &none    &trans   &trans
        >;
    };

    adj_layer {
      // ----------------------------------------------------------------------------------
      // | ? | ?    | ?    | ?    | RESET |  ?  | BT1 | BT2  | BT3  | BT4  | BT5 | BT CLR |
      // | ? | ?    | ?    | ?    | ?     |  ?  |     |      |      |      |     |        |
      // |   | MUTE | VOL- | VOL+ |       | BLE |     | PLAY | PREV | NEXT |     |        |
      //                   |      |       |           |      |      |
      bindings = <
        &none      &none        &none        &reset      &none        &none &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
        &none      &none        &none        &bootloader &none        &none &none &none        &none        &none        &none        &none
        &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &none       &out OUT_BLE &none &none &bt BT_CLR   &kp C_PP     &kp C_PREV   &kp C_NEXT   &none
        &trans     &trans       &none       &trans      &trans
      >;
    };
  };
};
