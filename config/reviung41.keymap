/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define L1 1
#define L2 2
#define L3 3

&mt {
  tapping-term-ms = <300>;
};

&lt {
  tapping-term-ms = <300>;
};

/ {
    behaviors {
      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
      };
    };

    keymap {
      compatible = "zmk,keymap";

      default_layer {
// ---------------------------------------------------------------------
// | Q | W | E | R   |    T    | ?? | ?? |    Y    | U    | I  | O | P |
// | A | S | D | F   |    G    | ?? | ?? |    H    | J    | K  | L | ; |
// | Z | X | C | V   |    B    | ?? | ?? |    N    | M    | ,  | . | / |
//             | TAB | LWR/SPC | ADJ/ESC | RSE/RET | BSPC |
        bindings = <
   &kp Q       &kp W      &kp E      &kp R   &kp T      &none  &none &kp Y      &kp U    &kp I          &kp O        &kp P
   &hm LCTRL A &kp S      &kp D      &kp F   &kp G      &none  &none &kp H      &kp J    &kp K          &kp L        &hm RCTRL SEMI
   &hm LSHFT Z &hm LALT X &hm LGUI C &kp V   &kp B      &none  &none &kp N      &kp M    &hm RGUI COMMA &hm RALT DOT &hm RSHFT FSLH
                                     &kp TAB &lt L1 SPC &lt L3 ESC   &lt L2 RET &kp BSPC
                  >;
      };

      lower_layer {
// -------------------------------------------------------
// | `    | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 |  =   |
// | BSPC | 6 | 7 | 8 | 9 | 0 |   |   |   |   |   | BSPC |
// |      |   |   |   |   |   |   |   |   |   |   |  \   |
//                |   |       |   |   |
      bindings = <
   &kp N1 &kp N2 &kp N3  &kp N4  &kp N5 &trans &trans &kp N6  &kp N7  &kp N8 &kp N9 &kp N0
   &kp N6 &kp N7 &kp N8  &kp N9  &kp N0 &trans &trans &trans  &trans  &trans &trans &trans
   &trans &trans &trans  &trans  &trans &trans &trans &trans  &trans  &trans &trans &trans
                           &trans  &trans  &trans &trans  &trans
                  >;
      };

      raise_layer {
// ---------------------------------------------------------------
// | ~    | ! | @ | # | $ | % |  ^  |  &  |  *  |  (  | ) |  +   |
// | BSPC | ^ | & | * | [ | ] | LFT | DWN |  UP | RGT | : | BSPC |
// |      |   |   |   |   |   |     |     |     |     |   |  |   |
//                |   |   |         |     |
      bindings = <
   &kp EXCL  &kp AT   &kp HASH &kp DLLR &kp PRCNT &trans &trans &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR
   &kp CARET &kp AMPS &kp STAR &kp LBKT &kp RBKT  &trans &trans &kp LEFT  &kp DOWN &kp UP   &kp RIGHT &trans
   &trans    &trans   &trans   &trans   &trans    &trans &trans &trans    &trans   &trans   &trans    &trans
                               &trans   &trans    &trans        &trans    &trans
                >;
      };

      adjust_layer {
// ----------------------------------------------------------------------------------
// | ? | ?    | ?    | ?    | RESET |  ?  | BT1 | BT2  | BT3  | BT4  | BT5 | BT CLR |
// | ? | ?    | ?    | ?    | ?     |  ?  |     |      |      |      |     |        |
// |   | MUTE | VOL- | VOL+ |       | BLE |     | PLAY | PREV | NEXT |     |        |
//                   |      |       |           |      |      |
        bindings = <
   &none      &none        &none        &reset       &none        &none &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
   &none      &none        &none        &bootloader  &none        &none &none      &none        &none        &none        &none        &none
   &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &none        &out OUT_BLE &none &none      &none        &kp C_PP     &kp C_PREV   &kp C_NEXT   &none
                                        &trans       &trans       &trans           &trans       &trans
                  >;
      };
    };
};
