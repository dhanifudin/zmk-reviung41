/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define L1 1
#define L2 2
#define L3 3

&mt {
  tapping-term-ms = <500>;
};

/ {
    keymap {
      compatible = "zmk,keymap";

      default_layer {
// --------------------------------------------------------------------------------------
// | TAB      | Q | W | E     | R       | T     | Y  | U       | I     | O | P |  -     |
// | CTRL/ESC | A | S | D     | F       | G     | H  | J       | K     | L | ; | CTRL/' |
// | SHFT/{   | Z | X | C     | V       | B     | N  | M       | ,     | . | / | SHFT/} |
//                    | ALT/( | LWR/SPC |  GUI/BSPC  | RSE/RET | ALT/) |
        bindings = <
   &kp GRAVE      &kp Q      &kp W      &kp E    &kp R    &kp T    &kp Y    &kp U    &kp I     &kp O      &kp P         &kp MINUS
   &mt LCTRL ESC  &mt LALT A &mt LGUI S &mt L3 D &mt L2 F &mt L1 G &mt L1 H &mt L2 J &mt L3 K  &mt RGUI L &mt RALT SEMI &mt RCTRL SQT
   &mt LSHFT LBRC &kp Z      &kp X      &kp C    &kp V    &kp B    &kp N    &kp M    &kp COMMA &kp DOT    &kp FSLH      &mt RSHFT RBRC
                              &mt DEL LPAR &kp SPC &mt TAB &kp RET &mt BSPC RPAR
                  >;
      };

      lower_layer {
// -------------------------------------------------------
// | `    | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 |  =   |
// | BSPC | 6 | 7 | 8 | 9 | 0 |   |   |   |   |   | BSPC |
// |      |   |   |   |   |   |   |   |   |   |   |  \   |
//                |   |       |   |   |
      bindings = <
   &trans   &kp N1 &kp N2 &kp N3  &kp N4  &kp N5 &kp N6  &kp N7  &kp N8 &kp N9 &kp N0 &kp EQUAL
   &kp BSPC &kp N6 &kp N7 &kp N8  &kp N9  &kp N0 &trans  &trans  &trans &trans &trans &kp BSPC
   &trans   &trans &trans &trans  &trans  &trans &trans  &trans  &trans &trans &trans &kp BSLH
                          &trans  &trans  &trans &trans  &trans
                  >;
      };

      raise_layer {
// ---------------------------------------------------------------
// | ~    | ! | @ | # | $ | % |  ^  |  &  |  *  |  (  | ) |  +   |
// | BSPC | ^ | & | * | [ | ] | LFT | DWN |  UP | RGT | : | BSPC |
// |      |   |   |   |   |   |     |     |     |     |   |  |   |
//                |   |   |         |     |
      bindings = <
   &kp TILDE &kp EXCL  &kp AT   &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR &kp PLUS
   &trans    &kp CARET &kp AMPS &kp STAR &kp LBKT &kp RBKT       &kp LEFT  &kp DOWN &kp UP   &kp RIGHT &trans   &kp BSPC
   &trans    &trans    &trans   &trans   &trans   &trans         &trans    &trans   &trans   &trans    &trans   &kp PIPE
                                         &trans   &trans &trans  &trans    &trans
                >;
      };

      adjust_layer {
// ----------------------------------------------------------------------------------
// | ? | ?    | ?    | ?    | RESET |  ?  | BT1 | BT2  | BT3  | BT4  | BT5 | BT CLR |
// | ? | ?    | ?    | ?    | ?     |  ?  |     |      |      |      |     |        |
// |   | MUTE | VOL- | VOL+ |       | BLE |     | PLAY | PREV | NEXT |     |        |
//                   |      |       |           |      |      |
        bindings = <
   &none &none      &none        &none        &reset &none        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &none &none      &none        &none        &none  &none        &none        &none        &none        &none        &none        &none
   &none &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &none  &out OUT_BLE &none        &kp C_PP     &kp C_PREV   &kp C_NEXT   &none        &none
                                 &trans       &trans &trans                    &trans       &trans
                  >;
      };
    };
};
