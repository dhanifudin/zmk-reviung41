/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV 1
#define SYM 2
#define NUM 3
#define FUN 4

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <0>; \
  }

&mt {
  tapping-term-ms = <200>;
};

&lt {
  tapping-term-ms = <200>;
};

/ {
	behaviors {
    combos {
      compatible = "zmk,combos";
      COMBO(capsword, &caps_word, 16 19);
      COMBO(lctrl, &kp LCTRL, 13 14);
      COMBO(lalt, &kp LALT, 14 15);
      COMBO(lgui, &kp LGUI, 15 16);
      COMBO(rctrl, &kp RCTRL, 21 22);
      COMBO(ralt, &kp RALT, 20 21);
      COMBO(rgui, &kp RGUI, 19 20);
    };
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// --------------------------------------------------------------------------------------
// | TAB      | Q | W | E     | R       | T     | Y  | U       | I     | O | P |  -     |
// | CTRL/ESC | A | S | D     | F       | G     | H  | J       | K     | L | ; | CTRL/' |
// | SHFT/{   | Z | X | C     | V       | B     | N  | M       | ,     | . | / | SHFT/} |
//                    | ALT/( | LWR/SPC |  GUI/BSPC  | RSE/RET | ALT/) |
      bindings = <
        &none &kp Q &kp W &kp E &kp R &kp T       &kp Y &kp U &kp I     &kp O   &kp P    &none
        &none &kp A &kp S &kp D &kp F &kp G       &kp H &kp J &kp K     &kp L   &kp SEMI &none
        &none &kp Z &kp X &kp C &kp V &kp B       &kp N &kp M &kp COMMA &kp DOT &kp FSLH &none
                    &lt NUM TAB &lt SYM SPC &none &lt NAV RET &kp LSHFT
      >;
    };

    nav_layer {
// -------------------------------------------------------
// | `   | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 |  =   |
// | DEL |   |   |   |   |   |   |   |   |   |   | BSPC |
// |     |   |   |   |   |   |   |   |   |   |   |      |
//                |   |       |   |   |
      bindings = <
        &none &trans &trans &trans &trans &trans        &kp LBRC &kp RBRC &kp LPAR &kp RPAR  &kp BSPC  &none
        &none &trans &trans &trans &trans &trans        &kp LEFT &kp DOWN &kp UP   &kp RIGHT &kp PG_UP &none
        &none &trans &trans &trans &trans &trans        &kp HOME &kp END  &kp LBKT &kp RBKT  &kp PG_DN &none
                      &trans        &mo FUN      &trans &trans   &trans
      >;
    };

    sym_layer {
// ---------------------------------------------------------------
// | ~    | ! | @ | # | $ | % |  ^  |  &  |  *  |  (  | ) |  +   |
// | BSPC | ^ | & | * | [ | ] | LFT | DWN |  UP | RGT | : | BSPC |
// |      |   |   |   |   |   |     |     |     |     |   |  |   |
//                |   |   |         |     |
      bindings = <
        &none &kp SQT   &kp DQT   &kp STAR  &kp AMPS &kp MINUS        &trans  &trans &trans &trans &trans &none
        &none &kp ESC   &kp CARET &kp PRCNT &kp DLLR &kp EQUAL        &trans  &trans &trans &trans &trans &none
        &none &kp GRAVE &kp HASH  &kp AT    &kp EXCL &kp BSLH         &trans  &trans &trans &trans &trans &none
                        &trans              &trans             &trans &mo FUN &trans
      >;
    };

    num_layer {
// ---------------------------------------------------------------
// | ~    | ! | @ | # | $ | % |  ^  |  &  |  *  |  (  | ) |  +   |
// | BSPC | ^ | & | * | [ | ] | LFT | DWN |  UP | RGT | : | BSPC |
// |      |   |   |   |   |   |     |     |     |     |   |  |   |
//                |   |   |         |     |
      bindings = <
        &none &kp trans &trans &trans &trans &trans      &trans  &kp N7 &kp N8 &kp N9 &trans &none
        &none &kp trans &trans &trans &trans &trans      &trans  &kp N4 &kp N5 &kp N6 &trans &none
        &none &kp trans &trans &trans &trans &trans      &kp N0  &kp N1 &kp N2 &kp N3 &trans &none
                        &trans              &trans       &trans &mo FUN &trans
      >;
    };

    fun_layer {
// ----------------------------------------------------------------------------------
// | ? | ?    | ?    | ?    | RESET |  ?  | BT1 | BT2  | BT3  | BT4  | BT5 | BT CLR |
// | ? | ?    | ?    | ?    | ?     |  ?  |     |      |      |      |     |        |
// |   | MUTE | VOL- | VOL+ |       | BLE |     | PLAY | PREV | NEXT |     |        |
//                   |      |       |           |      |      |
      bindings = <
        &none &trans &kp F9 &kp F8 &kp F7 &kp F12        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR &none
        &none &trans &kp F6 &kp F5 &kp F4 &kp F11        &bootloader  &sys_reset   &none        &none        &none      &none
        &none &trans &kp F3 &kp F2 &kp F1 &kp F10        &none        &kp C_PP     &kp C_PREV   &kp C_NEXT   &none      &none
                     &trans        &trans         &trans &trans &trans
      >;
    };
  };
};

// vi: ft=c